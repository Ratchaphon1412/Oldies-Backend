#Works flows
name: Django CI

#run worksflows when push to develop
on:
  push:
    branches: [ "develop" ]
# task
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Create env file
      run: |
        touch .env
        echo "SECRET_KEY=${{secrets.SECRETE_KEY}}" > .env
        echo "EMAIL_HOST_USER=${{secrets.EMAIL_HOST_USER}}" > .env
        echo "EMAIL_HOST_PASSWORD=${{secrets.EMAIL_HOST_PASSWORD}}" > .env
        echo "GOOGLE_CLIENT_ID=${{secrets.GOOGLE_CLIENT_ID}}" > .env
        echo "GOOGLE_CLIENT_SECRETE=${{secrets.GOOGLE_CLIENT_SECRETE}}" > .env
        echo "BASE_FRONTEND_URL=${{secrets.BASE_FRONTEND_URL}}" > .env
        echo "BASE_BACKEND_URL=${{secrets.BASE_BACKEND_URL}}" > .env
        echo "FACEBOOK_ID_APP=${{secrets.FACEBOOK_ID_APP}}" > .env
        echo "FACEBOOK_SECRETE=${{secrets.FACEBOOK_SECRETE}}" > .env
        echo "DB_USER=${{secrets.DB_USER}}" > .env
        echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" > .env
        cat .env
    - name: Heroku login credentials
      run: |
        cat > ~/.netrc <<EOF
          machine api.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
          machine git.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
        EOF
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    - name: Login to Heroku Container Registry
      run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com
    - name: Build and push Docker images
      run: |
        docker-compose build
        docker-compose push

    - name: Deploy to Heroku
      run: heroku container:release web --app oldies-backend
      
